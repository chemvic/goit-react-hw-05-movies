{"version":3,"file":"static/js/275.6900b97c.chunk.js","mappings":"8KAEOA,EAAkB,mCAAC,4FACL,6CACD,mCACRC,EAHc,UACL,6CADK,oBAEN,oCAFM,SAKKC,EAAAA,EAAAA,IAAUD,GALf,cAKXE,EALW,yBAQVA,GARU,2CAAD,qDAYfC,EAAe,mCAAC,WAAOC,GAAP,kFACVC,EADU,6CACuCD,GAC7C,mCACRJ,EAHc,UAGLK,EAHK,oBAEN,oCAFM,SAKIJ,EAAAA,EAAAA,IAAUD,GALd,cAKXM,EALW,yBAOVA,GAPU,2CAAD,sDAWfC,EAAa,mCAAC,WAAOH,EAASI,GAAhB,kFACZH,EADY,6CACqCD,EADrC,YACgDI,GACxD,mCACRR,EAHgB,UAGPK,EAHO,oBAER,oCAFQ,SAKKJ,EAAAA,EAAAA,IAAUD,GALf,cAKbS,EALa,yBAOZA,GAPY,2CAAD,wDAWbC,EAAkB,mCAAC,WAAOC,GAAP,4EACP,KAAVA,EADiB,mGAGT,mCACRX,EAJiB,0EAGT,mCAHS,kBAIyBW,GAJzB,SAMCV,EAAAA,EAAAA,IAAUD,GANX,cAMdM,EANc,yBAQbA,GARa,2CAAD,sDActBM,EAAI,CAACb,mBAAAA,EAAoBI,gBAAAA,EAAiBO,mBAAAA,EAAqBH,cAAAA,GACrE,K,sIClDA,EAA4B,wB,SCqD5B,EAjDa,WACT,OAA+BM,EAAAA,EAAAA,UAAS,IAAxC,eAAOJ,EAAP,KAAiBK,EAAjB,KACQV,GAAYW,EAAAA,EAAAA,MAAZX,QACR,GAA0BS,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAyBA,OApBAC,EAAAA,EAAAA,YAAU,WAEN,IAAMC,EAAS,mCAAE,6GAGSP,EAAAA,EAAAA,cAAkBR,EARhC,WAKK,OAGPK,EAHO,OAKbK,EAAYL,EAASW,KAAKC,MALb,gDASdJ,EAAS,EAAD,IATM,yDAAF,qDAafE,GAED,GAAC,CAACf,KAID,gCACoB,IAAlBK,EAASa,QAAa,mEAAmD,wBAC9Eb,EAASc,KAAI,SAAAF,GAAO,OACjB,2BACI,gBAAKG,IA7BW,mCA6BYH,EAAKI,aAAcC,IAAKL,EAAKM,KAAMC,UAAWC,KAC1E,uBAAIR,EAAKM,QACT,uBAAIN,EAAKS,cAHJT,EAAKU,GAKhB,MAGDf,IACI,uDAMR,C","sources":["api/fetchMovies-api.js","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\n const fetchPopularMovies=async () => {\n    const BASE_URL = \"https://api.themoviedb.org/3/movie/popular\";\n        const KEY = \"275907f385c33d24dbe69faf1e070b83\";\n        let url = `${BASE_URL}?api_key=${KEY}`;\n          \n         const movies  = await axios.get(url); \n     \n\n         return movies;         \n     \n    }\n\n    const fetchMoviesById=async (movieId) =>{\n          const BASE_URL = `https://api.themoviedb.org/3/movie/${movieId}`;\n        const KEY = \"275907f385c33d24dbe69faf1e070b83\";\n        let url = `${BASE_URL}?api_key=${KEY}`;\n          \n         const movie  = await axios.get(url); \n   \n         return movie;         \n     \n    }\n\n    const fetchInfoById=async (movieId, movieInfo) =>{\n      const BASE_URL = `https://api.themoviedb.org/3/movie/${movieId}/${movieInfo}`;\n    const KEY = \"275907f385c33d24dbe69faf1e070b83\";\n    let url = `${BASE_URL}?api_key=${KEY}`;\n      \n     const filmInfo  = await axios.get(url); \n    \n     return filmInfo;         \n    \n    }\n\n    const fetchMoviesByQuery=async (query) =>{\n        if (query === \"\") return;\n          const BASE_URL = `https://api.themoviedb.org/3/search/movie`;\n        const KEY = \"275907f385c33d24dbe69faf1e070b83\";\n        let url = `${BASE_URL}?api_key=${KEY}&query=${query}`;\n          \n         const movie  = await axios.get(url); \n    \n         return movie;         \n     \n    }\n \n\n\nconst API={fetchPopularMovies, fetchMoviesById, fetchMoviesByQuery,  fetchInfoById};\nexport default API;\n\n","// extracted by mini-css-extract-plugin\nexport default {\"castImage\":\"Cast_castImage__d8bQP\"};","import {  useEffect, useState } from 'react';\nimport {  useParams } from 'react-router-dom';\nimport API from \"../../api/fetchMovies-api\";\nimport css from \"./Cast.module.css\";\n\nconst Cast = () => {\n    const [filmInfo, setFilmInfo]= useState([]);\n    const { movieId } = useParams();\n    const [error, setError] = useState(null);\n    const IMAGES_BASE_URL = 'https://image.tmdb.org/t/p/w200/';\n    const movieInfo='credits';\n\n\n    useEffect(()=>{\n\n        const fetchCast= async() =>{\n           \n          try {\n            const filmInfo= await API.fetchInfoById(movieId, movieInfo );\n          \n            setFilmInfo(filmInfo.data.cast);\n            \n          } \n          catch (error) {\n           setError(error);\n          } \n        }\n        \n        fetchCast();\n       \n      },[movieId]);\n\n     \n    return(\n        <>\n        {(filmInfo.length===0)? <p>We don`t have any casts for this movie</p> :    <ul>\n    {filmInfo.map(cast=>{return(\n        <li key={cast.id}>\n            <img src={IMAGES_BASE_URL + cast.profile_path} alt={cast.name} className={css.castImage}></img>\n            <p>{cast.name}</p>\n            <p>{cast.character}</p>\n        </li>\n    )})\n    }\n    </ul>}\n    {error && (\n         <p>\"Something went wrong(((\"</p>\n        )}\n        </>\n\n    \n    );\n};\n\nexport default Cast;"],"names":["fetchPopularMovies","url","axios","movies","fetchMoviesById","movieId","BASE_URL","movie","fetchInfoById","movieInfo","filmInfo","fetchMoviesByQuery","query","API","useState","setFilmInfo","useParams","error","setError","useEffect","fetchCast","data","cast","length","map","src","profile_path","alt","name","className","css","character","id"],"sourceRoot":""}