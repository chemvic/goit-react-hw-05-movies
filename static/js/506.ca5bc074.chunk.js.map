{"version":3,"file":"static/js/506.ca5bc074.chunk.js","mappings":"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","sources":["api/fetchMovies-api.js","webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\n const fetchPopularMovies=async () => {\n    const BASE_URL = \"https://api.themoviedb.org/3/movie/popular\";\n        const KEY = \"275907f385c33d24dbe69faf1e070b83\";\n        let url = `${BASE_URL}?api_key=${KEY}`;\n          \n         const movies  = await axios.get(url); \n     \n\n         return movies;         \n     \n    }\n\n    const fetchMoviesById=async (movieId) =>{\n          const BASE_URL = `https://api.themoviedb.org/3/movie/${movieId}`;\n        const KEY = \"275907f385c33d24dbe69faf1e070b83\";\n        let url = `${BASE_URL}?api_key=${KEY}`;\n          \n         const movie  = await axios.get(url); \n   \n         return movie;         \n     \n    }\n\n    const fetchInfoById=async (movieId, movieInfo) =>{\n      const BASE_URL = `https://api.themoviedb.org/3/movie/${movieId}/${movieInfo}`;\n    const KEY = \"275907f385c33d24dbe69faf1e070b83\";\n    let url = `${BASE_URL}?api_key=${KEY}`;\n      \n     const filmInfo  = await axios.get(url); \n    \n     return filmInfo;         \n    \n    }\n\n    const fetchMoviesByQuery=async (query) =>{\n        if (query === \"\") return;\n          const BASE_URL = `https://api.themoviedb.org/3/search/movie`;\n        const KEY = \"275907f385c33d24dbe69faf1e070b83\";\n        let url = `${BASE_URL}?api_key=${KEY}&query=${query}`;\n          \n         const movie  = await axios.get(url); \n    \n         return movie;         \n     \n    }\n \n\n\nconst API={fetchPopularMovies, fetchMoviesById, fetchMoviesByQuery,  fetchInfoById};\nexport default API;\n\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetails_container__Ys+c9\",\"informationMain\":\"MovieDetails_informationMain__A3CFp\",\"movieImageBlock\":\"MovieDetails_movieImageBlock__iVEHK\",\"backBtn\":\"MovieDetails_backBtn__rLQ3F\",\"movieImage\":\"MovieDetails_movieImage__SFpqg\",\"informationAdd\":\"MovieDetails_informationAdd__opBF2\"};","import { Suspense, useRef, useEffect, useState } from 'react';\nimport { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport API from \"../../api/fetchMovies-api\";\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport css from \"./MovieDetails.module.css\";\nimport { FaLongArrowAltLeft } from \"react-icons/fa\";\n\n\nconst MovieDetails = () => {\n    const location = useLocation();\n    const backLinkLocationRef = useRef(location.state?.from ?? '/');\n    const { movieId } = useParams();\n    const [movie, setMovie] = useState({});\n    const [error, setError] = useState(null);\n    const IMAGES_BASE_URL = 'https://image.tmdb.org/t/p/w200/';\n   \n\n    useEffect(()=>{\n\n        const fetchMovie= async() =>{\n           \n          try {\n            const movie= await API.fetchMoviesById(movieId);\n            \n            if (movie === {}) {\n              return toast.error(\n                \"No images by your query\"\n              );\n            }\n              setMovie(movie.data);       \n\n          } \n          catch (error) {\n           setError(error);\n          } \n        }\n        if(movieId===''){\n            return;\n          }\n     \n        fetchMovie();\n    \n      },[movieId]);\n\n        const { genres, original_title,vote_average, overview, poster_path  } = movie;\n   \n        return(\n\n        <div className={css.container}>\n        <div className={css.informationMain}>\n            <div className={css.movieImageBlock}>\n              \n        <FaLongArrowAltLeft style={{color: \"#0077cc\",}}/><Link to={backLinkLocationRef.current} className={css.backBtn}>Go back</Link>\n             \n          \n        <img src={IMAGES_BASE_URL + poster_path} alt={original_title} className={css.movieImage}/>\n            </div>\n\n            <div className={css.infoBlock}>\n                 <h1> {original_title}</h1>\n        <p>User score: {Math.round(vote_average*10)}%</p>\n        \n         {(overview!=='')&&<> <h2>Overview</h2>\n    <p>{overview}</p></>}\n        {(genres)&&<><h3>Genres</h3> <p>{(genres).map(genre=>genre.name).join(\", \")}</p></>}\n            </div>        \n\n       \n        </div>\n        <div className={css.informationAdd}>\n            <h4>Additional information</h4>\n           <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n        </div>\n        <Suspense fallback={<div>LOADING ADDITIONAL INFORMATION...</div>}>\n          <Outlet />\n        </Suspense>  \n        \n        {error && (\n         <p>\"Something went wrong(((\"</p>\n        )}\n      \n        \n\n       \n      </div>\n    )\n};\n\nexport default MovieDetails;"],"names":["fetchPopularMovies","url","axios","movies","fetchMoviesById","movieId","BASE_URL","movie","fetchInfoById","movieInfo","filmInfo","fetchMoviesByQuery","query","API","location","useLocation","backLinkLocationRef","useRef","state","from","useParams","useState","setMovie","error","setError","useEffect","fetchMovie","toast","data","genres","original_title","vote_average","overview","poster_path","className","css","style","color","to","current","src","alt","Math","round","map","genre","name","join","Suspense","fallback"],"sourceRoot":""}