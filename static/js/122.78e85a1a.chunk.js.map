{"version":3,"file":"static/js/122.78e85a1a.chunk.js","mappings":"kLAEOA,EAAkB,mCAAC,4FACL,6CACD,mCACRC,EAHc,UACL,6CADK,oBAEN,oCAFM,SAKKC,EAAAA,EAAAA,IAAUD,GALf,cAKXE,EALW,yBAOVA,GAPU,2CAAD,qDAWfC,EAAe,mCAAC,WAAOC,GAAP,kFACVC,EADU,6CACuCD,GAC7C,mCACRJ,EAHc,UAGLK,EAHK,oBAEN,oCAFM,SAKIJ,EAAAA,EAAAA,IAAUD,GALd,cAKXM,EALW,yBAOVA,GAPU,2CAAD,sDAWfC,EAAa,mCAAC,WAAOH,EAASI,GAAhB,kFACZH,EADY,6CACqCD,EADrC,YACgDI,GACxD,mCACRR,EAHgB,UAGPK,EAHO,oBAER,oCAFQ,SAKKJ,EAAAA,EAAAA,IAAUD,GALf,cAKbS,EALa,yBAOZA,GAPY,2CAAD,wDAWbC,EAAkB,mCAAC,WAAOC,GAAP,4EACP,KAAVA,EADiB,mGAGT,mCACRX,EAJiB,0EAGT,mCAHS,kBAIyBW,GAJzB,SAMCV,EAAAA,EAAAA,IAAUD,GANX,cAMdM,EANc,yBAQbA,GARa,2CAAD,sDActBM,EAAI,CAACb,mBAAAA,EAAoBI,gBAAAA,EAAiBO,mBAAAA,EAAqBH,cAAAA,GACrE,K,mECjDA,EAAyB,uB,kBCwBzB,EAnBa,SAAC,GAAa,IAAZM,EAAW,EAAXA,QAEX,OACG,iBAAKC,UAAWC,EAAhB,eAA6B,SAAC,KAAD,CAC5BC,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBT,QAASA,MAIhB,C,gKCoCD,EApDgB,WACZ,OAA+BU,EAAAA,EAAAA,UAAS,IAAxC,eAAOd,EAAP,KAAiBe,EAAjB,KACQpB,GAAYqB,EAAAA,EAAAA,MAAZrB,QACR,GAA0BmB,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAiCJ,EAAAA,EAAAA,WAAS,GAA1C,eAAOK,EAAP,KAAkBC,EAAlB,KA0BA,OAvBAC,EAAAA,EAAAA,YAAU,WAEN,IAAMC,EAAY,mCAAE,2FAClBF,GAAa,GADK,kBAGMjB,EAAAA,EAAAA,cAAkBR,EAPhC,WAIQ,OAGVK,EAHU,OAKhBe,EAAYf,EAASuB,KAAKC,SALV,gDASjBN,EAAS,EAAD,IATS,yBAWhBE,GAAa,GAXG,4EAAF,qDAelBE,GAED,GAAC,CAAC3B,KAKL,gCACEwB,IACC,SAACM,EAAA,EAAD,CAAQrB,SAAS,IACA,IAAlBJ,EAAS0B,QAAeP,GAAcF,GAA0D,wBAC7FjB,EAAS2B,KAAI,SAAAC,GAAS,OACnB,2BACI,qCAAaA,EAAOC,WACpB,uBAAID,EAAOE,YAFNF,EAAOG,GAIlB,OAN0C,oEAS3Cd,IACA,uDAMR,C","sources":["api/fetchMovies-api.js","webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\n const fetchPopularMovies=async () => {\n    const BASE_URL = \"https://api.themoviedb.org/3/movie/popular\";\n        const KEY = \"275907f385c33d24dbe69faf1e070b83\";\n        let url = `${BASE_URL}?api_key=${KEY}`;\n          \n         const movies  = await axios.get(url); \n\n         return movies;         \n     \n    }\n\n    const fetchMoviesById=async (movieId) =>{\n          const BASE_URL = `https://api.themoviedb.org/3/movie/${movieId}`;\n        const KEY = \"275907f385c33d24dbe69faf1e070b83\";\n        let url = `${BASE_URL}?api_key=${KEY}`;\n          \n         const movie  = await axios.get(url); \n   \n         return movie;         \n     \n    }\n\n    const fetchInfoById=async (movieId, movieInfo) =>{\n      const BASE_URL = `https://api.themoviedb.org/3/movie/${movieId}/${movieInfo}`;\n    const KEY = \"275907f385c33d24dbe69faf1e070b83\";\n    let url = `${BASE_URL}?api_key=${KEY}`;\n      \n     const filmInfo  = await axios.get(url); \n    \n     return filmInfo;         \n    \n    }\n\n    const fetchMoviesByQuery=async (query) =>{\n        if (query === \"\") return;\n          const BASE_URL = `https://api.themoviedb.org/3/search/movie`;\n        const KEY = \"275907f385c33d24dbe69faf1e070b83\";\n        let url = `${BASE_URL}?api_key=${KEY}&query=${query}`;\n          \n         const movie  = await axios.get(url); \n    \n         return movie;         \n     \n    }\n \n\n\nconst API={fetchPopularMovies, fetchMoviesById, fetchMoviesByQuery,  fetchInfoById};\nexport default API;\n\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from \"./Loader.module.css\";\nimport { ThreeDots  } from  'react-loader-spinner'\n\n\nconst Loader=({visible})=>{\n   \n    return(\n       <div className={css.loader}> <ThreeDots \n        height=\"80\" \n        width=\"80\" \n        radius=\"9\"\n        color=\"#4fa94d\" \n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={visible}\n         />\n    </div>)\n       \n}\nLoader.propTypes={\n    visible: PropTypes.bool.isRequired\n}\nexport default Loader;","import {  useEffect, useState } from 'react';\nimport {  useParams } from 'react-router-dom';\nimport API from \"../../api/fetchMovies-api\";\nimport Loader from \"../Loader\";\n\nconst Reviews = () => {\n    const [filmInfo, setFilmInfo]= useState([]);\n    const { movieId } = useParams();\n    const [error, setError] = useState(null);\n    const[ isLoading, setIsLoading ]=useState(false);\n    const movieInfo='reviews';\n\n    useEffect(()=>{\n\n        const fetchReviews= async() =>{\n          setIsLoading(true);\n          try {\n            const filmInfo= await API.fetchInfoById(movieId, movieInfo );\n            \n            setFilmInfo(filmInfo.data.results);\n            \n          } \n          catch (error) {\n           setError(error);\n          } finally {\n            setIsLoading(false);    \n          } \n        }\n        \n        fetchReviews();\n       \n      },[movieId]);\n\n\n\n    return(\n    <>\n    {(isLoading) && \n      (<Loader visible={true}/>)}\n    {(filmInfo.length===0 && !isLoading && !error)? <p>We don`t have any reviews for this movie</p> : <ul>\n        {filmInfo.map(review=>{return(\n            <li key={review.id}>\n                <h3>Author: {review.author}</h3>\n                <p>{review.content}</p>\n            </li>\n        )})\n        }\n        </ul>}\n        {error && (\n         <p>\"Something went wrong(((\"</p>\n        )}\n    </>\n        \n      \n    )\n};\n\nexport default Reviews;"],"names":["fetchPopularMovies","url","axios","movies","fetchMoviesById","movieId","BASE_URL","movie","fetchInfoById","movieInfo","filmInfo","fetchMoviesByQuery","query","API","visible","className","css","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","useState","setFilmInfo","useParams","error","setError","isLoading","setIsLoading","useEffect","fetchReviews","data","results","Loader","length","map","review","author","content","id"],"sourceRoot":""}