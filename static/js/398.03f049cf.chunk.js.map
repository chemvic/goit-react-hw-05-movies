{"version":3,"file":"static/js/398.03f049cf.chunk.js","mappings":"kLAEOA,EAAkB,mCAAC,4FACL,6CACD,mCACRC,EAHc,UACL,6CADK,oBAEN,oCAFM,SAKKC,EAAAA,EAAAA,IAAUD,GALf,cAKXE,EALW,yBAOVA,GAPU,2CAAD,qDAWfC,EAAe,mCAAC,WAAOC,GAAP,kFACVC,EADU,6CACuCD,GAC7C,mCACRJ,EAHc,UAGLK,EAHK,oBAEN,oCAFM,SAKIJ,EAAAA,EAAAA,IAAUD,GALd,cAKXM,EALW,yBAOVA,GAPU,2CAAD,sDAWfC,EAAa,mCAAC,WAAOH,EAASI,GAAhB,kFACZH,EADY,6CACqCD,EADrC,YACgDI,GACxD,mCACRR,EAHgB,UAGPK,EAHO,oBAER,oCAFQ,SAKKJ,EAAAA,EAAAA,IAAUD,GALf,cAKbS,EALa,yBAOZA,GAPY,2CAAD,wDAWbC,EAAkB,mCAAC,WAAOC,GAAP,4EACP,KAAVA,EADiB,mGAGT,mCACRX,EAJiB,0EAGT,mCAHS,kBAIyBW,GAJzB,SAMCV,EAAAA,EAAAA,IAAUD,GANX,cAMdM,EANc,yBAQbA,GARa,2CAAD,sDActBM,EAAI,CAACb,mBAAAA,EAAoBI,gBAAAA,EAAiBO,mBAAAA,EAAqBH,cAAAA,GACrE,K,6ICjDA,EAA4B,wB,mBC8D5B,EAxDa,WACT,OAA+BM,EAAAA,EAAAA,UAAS,IAAxC,eAAOJ,EAAP,KAAiBK,EAAjB,KACQV,GAAYW,EAAAA,EAAAA,MAAZX,QACR,GAA0BS,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAiCJ,EAAAA,EAAAA,WAAS,GAA1C,eAAOK,EAAP,KAAkBC,EAAlB,KA4BA,OAtBAC,EAAAA,EAAAA,YAAU,WAEN,IAAMC,EAAS,mCAAE,2FACfF,GAAa,GADE,kBAGSP,EAAAA,EAAAA,cAAkBR,EARhC,WAKK,OAGPK,EAHO,OAKbK,EAAYL,EAASa,KAAKC,MALb,gDASdN,EAAS,EAAD,IATM,yBAWbE,GAAa,GAXA,4EAAF,qDAefE,GAED,GAAC,CAACjB,KAID,gCACEc,IACH,SAACM,EAAA,EAAD,CAAQC,SAAS,IACI,IAAlBhB,EAASiB,QAAeV,GAASE,GAA+D,wBACrGT,EAASkB,KAAI,SAAAJ,GAAO,OACjB,2BACI,gBAAKK,IAAKL,EAAKM,aAlCC,mCAkCgCN,EAAKM,a,05HAAkCC,IAAKP,EAAKQ,KAAMC,UAAWC,KAElH,uBAAIV,EAAKQ,QACT,uBAAIR,EAAKW,cAJJX,EAAKY,IAAIZ,EAAKa,QAMzB,OARiD,kEAWlDpB,IACI,uDAMR,C,mEC5DD,EAAyB,uB,kBCwBzB,EAnBa,SAAC,GAAa,IAAZS,EAAW,EAAXA,QAEX,OACG,iBAAKO,UAAWC,EAAhB,eAA6B,SAAC,KAAD,CAC5BI,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBlB,QAASA,MAIhB,C","sources":["api/fetchMovies-api.js","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx"],"sourcesContent":["import axios from 'axios';\n\n const fetchPopularMovies=async () => {\n    const BASE_URL = \"https://api.themoviedb.org/3/movie/popular\";\n        const KEY = \"275907f385c33d24dbe69faf1e070b83\";\n        let url = `${BASE_URL}?api_key=${KEY}`;\n          \n         const movies  = await axios.get(url); \n\n         return movies;         \n     \n    }\n\n    const fetchMoviesById=async (movieId) =>{\n          const BASE_URL = `https://api.themoviedb.org/3/movie/${movieId}`;\n        const KEY = \"275907f385c33d24dbe69faf1e070b83\";\n        let url = `${BASE_URL}?api_key=${KEY}`;\n          \n         const movie  = await axios.get(url); \n   \n         return movie;         \n     \n    }\n\n    const fetchInfoById=async (movieId, movieInfo) =>{\n      const BASE_URL = `https://api.themoviedb.org/3/movie/${movieId}/${movieInfo}`;\n    const KEY = \"275907f385c33d24dbe69faf1e070b83\";\n    let url = `${BASE_URL}?api_key=${KEY}`;\n      \n     const filmInfo  = await axios.get(url); \n    \n     return filmInfo;         \n    \n    }\n\n    const fetchMoviesByQuery=async (query) =>{\n        if (query === \"\") return;\n          const BASE_URL = `https://api.themoviedb.org/3/search/movie`;\n        const KEY = \"275907f385c33d24dbe69faf1e070b83\";\n        let url = `${BASE_URL}?api_key=${KEY}&query=${query}`;\n          \n         const movie  = await axios.get(url); \n    \n         return movie;         \n     \n    }\n \n\n\nconst API={fetchPopularMovies, fetchMoviesById, fetchMoviesByQuery,  fetchInfoById};\nexport default API;\n\n","// extracted by mini-css-extract-plugin\nexport default {\"castImage\":\"Cast_castImage__d8bQP\"};","import {  useEffect, useState } from 'react';\nimport {  useParams } from 'react-router-dom';\nimport API from \"../../api/fetchMovies-api\";\nimport css from \"./Cast.module.css\";\nimport Loader from \"../Loader\";\nimport DEFAULT_IMAGE_MAN from \"../../images/DEFAULT_IMAGE_MAN.jpeg\";\n\nconst Cast = () => {\n    const [filmInfo, setFilmInfo]= useState([]);\n    const { movieId } = useParams();\n    const [error, setError] = useState(null);\n    const[ isLoading, setIsLoading ]=useState(false);\n    const IMAGES_BASE_URL = 'https://image.tmdb.org/t/p/w200/';\n\n    const movieInfo='credits';\n\n\n    useEffect(()=>{\n\n        const fetchCast= async() =>{\n          setIsLoading(true);\n          try {\n            const filmInfo= await API.fetchInfoById(movieId, movieInfo );\n          \n            setFilmInfo(filmInfo.data.cast);\n            \n          } \n          catch (error) {\n           setError(error);\n          } finally {\n            setIsLoading(false);    \n         }\n        }\n        \n        fetchCast();\n       \n      },[movieId]);\n\n     \n    return(\n        <>\n        {(isLoading) && \n      (<Loader visible={true}/>)}\n        {(filmInfo.length===0 && !error&& !isLoading)? <p>We don`t have any casts for this movie</p> :    <ul>\n    {filmInfo.map(cast=>{return(\n        <li key={cast.id||cast.cast_id}>\n            <img src={cast.profile_path ? IMAGES_BASE_URL + cast.profile_path : DEFAULT_IMAGE_MAN} alt={cast.name} className={css.castImage}></img>\n            {/* <img src={IMAGES_BASE_URL + cast.profile_path} alt={cast.name} className={css.castImage}></img> */}\n            <p>{cast.name}</p>\n            <p>{cast.character}</p>\n        </li>\n    )})\n    }\n    </ul>}\n    {error && (\n         <p>\"Something went wrong(((\"</p>\n        )}\n        </>\n\n    \n    );\n};\n\nexport default Cast;","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from \"./Loader.module.css\";\nimport { ThreeDots  } from  'react-loader-spinner'\n\n\nconst Loader=({visible})=>{\n   \n    return(\n       <div className={css.loader}> <ThreeDots \n        height=\"80\" \n        width=\"80\" \n        radius=\"9\"\n        color=\"#4fa94d\" \n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={visible}\n         />\n    </div>)\n       \n}\nLoader.propTypes={\n    visible: PropTypes.bool.isRequired\n}\nexport default Loader;"],"names":["fetchPopularMovies","url","axios","movies","fetchMoviesById","movieId","BASE_URL","movie","fetchInfoById","movieInfo","filmInfo","fetchMoviesByQuery","query","API","useState","setFilmInfo","useParams","error","setError","isLoading","setIsLoading","useEffect","fetchCast","data","cast","Loader","visible","length","map","src","profile_path","alt","name","className","css","character","id","cast_id","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName"],"sourceRoot":""}