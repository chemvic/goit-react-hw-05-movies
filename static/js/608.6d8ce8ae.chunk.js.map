{"version":3,"file":"static/js/608.6d8ce8ae.chunk.js","mappings":"8KAEOA,EAAkB,mCAAC,4FACL,6CACD,mCACRC,EAHc,UACL,6CADK,oBAEN,oCAFM,SAKKC,EAAAA,EAAAA,IAAUD,GALf,cAKXE,EALW,yBAQVA,GARU,2CAAD,qDAYfC,EAAe,mCAAC,WAAOC,GAAP,kFACVC,EADU,6CACuCD,GAC7C,mCACRJ,EAHc,UAGLK,EAHK,oBAEN,oCAFM,SAKIJ,EAAAA,EAAAA,IAAUD,GALd,cAKXM,EALW,yBAOVA,GAPU,2CAAD,sDAWfC,EAAa,mCAAC,WAAOH,EAASI,GAAhB,kFACZH,EADY,6CACqCD,EADrC,YACgDI,GACxD,mCACRR,EAHgB,UAGPK,EAHO,oBAER,oCAFQ,SAKKJ,EAAAA,EAAAA,IAAUD,GALf,cAKbS,EALa,yBAOZA,GAPY,2CAAD,wDAWbC,EAAkB,mCAAC,WAAOC,GAAP,4EACP,KAAVA,EADiB,mGAGT,mCACRX,EAJiB,0EAGT,mCAHS,kBAIyBW,GAJzB,SAMCV,EAAAA,EAAAA,IAAUD,GANX,cAMdM,EANc,yBAQbA,GARa,2CAAD,sDActBM,EAAI,CAACb,mBAAAA,EAAoBI,gBAAAA,EAAiBO,mBAAAA,EAAqBH,cAAAA,GACrE,K,uJClDA,G,OAA4B,2BAA5B,EAAmE,2BAAnE,EAAyG,yB,SCmFzG,EA5Ee,WAAO,IAAD,EACjB,GAAwCM,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA2BC,EAAAA,EAAAA,UAAS,IAApC,eAAOd,EAAP,KAAee,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAAoCH,EAAAA,EAAAA,UAAS,IAA7C,eAAOI,EAAP,KAAmBC,EAAnB,KAEMC,GAAWC,EAAAA,EAAAA,MACXZ,EAAK,UAAGG,EAAaU,IAAI,gBAApB,QAA8B,IAEzCC,EAAAA,EAAAA,YAAU,WAGN,IAAMC,EAAW,mCAAC,6GAEMd,EAAAA,EAAAA,mBAAuBD,GAF7B,UAIqB,KAF7BT,EAFQ,QAIHyB,KAAKC,QAAQC,OAJV,yCAKLC,EAAAA,GAAAA,MACL,4BANU,OASZb,EAAWf,EAAOyB,KAAKC,SATX,gDAYfT,EAAS,EAAD,IAZO,yDAAD,qDAgBJ,KAARR,GAIJe,GAEF,GAAC,CAACf,IASL,OACJ,iBAAKoB,UAAWC,EAAhB,WACE,iBAAKD,UAAWC,EAAhB,WACF,kBACQC,KAAK,OACLC,MAAOd,EACPe,SAAU,SAACC,GAAD,OAAMf,EAAce,EAAEC,OAAOH,MAA7B,KAEZ,mBAAQD,KAAK,SAASF,UAAWC,EAAcM,QAAS,kBAf9B,SAAC3B,GAEzBI,EADyB,KAAVJ,EAAe,CAAEA,MAAAA,GAAU,CAAC,GAE3CU,EAAc,GACf,CAW2DkB,CAAkBnB,EAAtB,EAAxD,uBAIET,IAAUO,IAAS,wBAChBhB,EAAOsC,KAAI,YAA0B,IAAxBC,EAAuB,EAAvBA,eAAgBC,EAAO,EAAPA,GAChC,OACI,yBACA,SAAC,KAAD,CAAMC,GAAE,UAAKD,GAAME,MAAO,CAAEC,KAAMvB,GAAlC,SACGmB,KAFMC,EAMhB,MAIExB,IACE,uDAKR,C","sources":["api/fetchMovies-api.js","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\n const fetchPopularMovies=async () => {\n    const BASE_URL = \"https://api.themoviedb.org/3/movie/popular\";\n        const KEY = \"275907f385c33d24dbe69faf1e070b83\";\n        let url = `${BASE_URL}?api_key=${KEY}`;\n          \n         const movies  = await axios.get(url); \n     \n\n         return movies;         \n     \n    }\n\n    const fetchMoviesById=async (movieId) =>{\n          const BASE_URL = `https://api.themoviedb.org/3/movie/${movieId}`;\n        const KEY = \"275907f385c33d24dbe69faf1e070b83\";\n        let url = `${BASE_URL}?api_key=${KEY}`;\n          \n         const movie  = await axios.get(url); \n   \n         return movie;         \n     \n    }\n\n    const fetchInfoById=async (movieId, movieInfo) =>{\n      const BASE_URL = `https://api.themoviedb.org/3/movie/${movieId}/${movieInfo}`;\n    const KEY = \"275907f385c33d24dbe69faf1e070b83\";\n    let url = `${BASE_URL}?api_key=${KEY}`;\n      \n     const filmInfo  = await axios.get(url); \n    \n     return filmInfo;         \n    \n    }\n\n    const fetchMoviesByQuery=async (query) =>{\n        if (query === \"\") return;\n          const BASE_URL = `https://api.themoviedb.org/3/search/movie`;\n        const KEY = \"275907f385c33d24dbe69faf1e070b83\";\n        let url = `${BASE_URL}?api_key=${KEY}&query=${query}`;\n          \n         const movie  = await axios.get(url); \n    \n         return movie;         \n     \n    }\n \n\n\nconst API={fetchPopularMovies, fetchMoviesById, fetchMoviesByQuery,  fetchInfoById};\nexport default API;\n\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Movies_container__+-Cnt\",\"inputBlock\":\"Movies_inputBlock__JitVW\",\"inputBtn\":\"Movies_inputBtn__iSQSx\"};","import { useState, useEffect} from 'react';\nimport { Link,  useSearchParams, useLocation } from 'react-router-dom';\nimport API from \"../../api/fetchMovies-api\";\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport css from \"./Movies.module.css\";\n\n\nconst Movies = () => {  \n    const [searchParams, setSearchParams] = useSearchParams();\n    const [movies, setMovies]= useState([]);\n    const [error, setError] = useState(null);\n    const [inputValue, setInputValue] = useState('');\n\n    const location = useLocation();\n    const query = searchParams.get(\"query\")??\"\";\n\n    useEffect(()=>{\n       \n\n        const fetchMovies=async()=>{\n          try {\n            const movies= await API.fetchMoviesByQuery(query);\n            \n            if (movies.data.results.length === 0) {\n              return toast.error(\n                \"No movies by your query\"\n              );\n            }\n              setMovies( movies.data.results);             \n            \n          } catch (error) {\n           setError(error);\n          } \n        }\n           \n          if(query===''){\n            return;\n          }\n   \n         fetchMovies();\n   \n      },[query]);\n\n      const updateQueryString = (query) => {\n        const params = query !== \"\" ? { query } : {};\n        setSearchParams(params);\n        setInputValue('');\n      };\n   \n    \n    return(\n<div className={css.container}>\n  <div className={css.inputBlock}>\n<input\n        type=\"text\"\n        value={inputValue}\n        onChange={(e) =>setInputValue(e.target.value )}\n      />\n      <button type=\"button\" className={css.inputBtn} onClick={()=>updateQueryString(inputValue)}>Search</button>\n  </div>\n  \n\n      {(query && !error)&&(<ul>\n          {movies.map(({original_title, id}) =>{\n        return (\n            <li key={id}>\n            <Link to={`${id}`} state={{ from: location }}>\n              {original_title}\n            </Link>\n          </li>   \n        )\n    })} \n\n    </ul>)\n      }\n      {error && (\n         <p>\"Something went wrong(((\"</p>\n        )}\n\n     </div>\n    )\n};\n\nexport default Movies;"],"names":["fetchPopularMovies","url","axios","movies","fetchMoviesById","movieId","BASE_URL","movie","fetchInfoById","movieInfo","filmInfo","fetchMoviesByQuery","query","API","useSearchParams","searchParams","setSearchParams","useState","setMovies","error","setError","inputValue","setInputValue","location","useLocation","get","useEffect","fetchMovies","data","results","length","toast","className","css","type","value","onChange","e","target","onClick","updateQueryString","map","original_title","id","to","state","from"],"sourceRoot":""}